
> trading-backend@1.0.0 start
> node simple-backend.js

âœ… Found existing contracts file with 57 contracts
ðŸš€ Backend running on http://localhost:8000
ðŸ“„ Contracts cached in: /Users/tejasvihegde/Documents/PropAutomation/SuperCharts/SuperCharts/trading-backend/tradableContracts.json
âœ… Connected to PostgreSQL database
ðŸ“Š Update strategy request: {
  id: '9887d6ce-9751-47ef-9a78-a648fff5a614',
  chart_config: null,
  chart_type: 'candlestick',
  brick_size: null,
  hasWebhookPayload: true
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
ðŸ“Š Loading saved strategy: 9887d6ce-9751-47ef-9a78-a648fff5a614
ðŸ“Š Loaded saved strategy configuration: {
  strategyType: 'candlestick',
  timeframe: '15',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'Test Strategy with Indicators',
  indicators: [],
  strategyId: '9887d6ce-9751-47ef-9a78-a648fff5a614',
  isExistingStrategy: true
}
ðŸš€ Launched chart in browser: http://localhost:8000/api/chart
ðŸ“Š With configuration: {
  strategyType: 'candlestick',
  timeframe: '15',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'Test Strategy with Indicators',
  indicators: [],
  strategyId: '9887d6ce-9751-47ef-9a78-a648fff5a614',
  isExistingStrategy: true
}
ðŸ“Š Update strategy request: {
  id: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  chart_config: null,
  chart_type: 'candlestick',
  brick_size: null,
  hasWebhookPayload: true
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
ðŸ“Š Loading saved strategy: d40ec77f-c3e7-4175-8be5-5667e07aab6f
ðŸ“Š Loaded saved strategy configuration: {
  strategyType: 'candlestick',
  timeframe: '100T',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'MNQscalper',
  indicators: [],
  strategyId: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  isExistingStrategy: true
}
ðŸš€ Launched chart in browser: http://localhost:8000/api/chart
ðŸ“Š With configuration: {
  strategyType: 'candlestick',
  timeframe: '100T',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'MNQscalper',
  indicators: [],
  strategyId: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  isExistingStrategy: true
}
ðŸ“Š Update strategy request: {
  id: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  chart_config: {
    resolution: '100T',
    chartType: 'candlestick',
    brickSize: '0.25',
    indicators: [ [Object] ],
    timestamp: '2025-09-18T19:55:26.798Z'
  },
  chart_type: 'candlestick',
  brick_size: 0.25,
  hasWebhookPayload: false
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
ðŸ“Š Update strategy request: {
  id: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  chart_config: {
    resolution: '100T',
    chartType: 'candlestick',
    brickSize: '0.25',
    indicators: [ [Object] ],
    timestamp: '2025-09-18T19:55:28.902Z'
  },
  chart_type: 'candlestick',
  brick_size: 0.25,
  hasWebhookPayload: false
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
ðŸ“Š Update strategy request: {
  id: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  chart_config: null,
  chart_type: 'candlestick',
  brick_size: null,
  hasWebhookPayload: true
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
ðŸ“Š Loading saved strategy: d40ec77f-c3e7-4175-8be5-5667e07aab6f
ðŸ“Š Loaded saved strategy configuration: {
  strategyType: 'candlestick',
  timeframe: '100T',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'MNQscalper',
  indicators: [],
  strategyId: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  isExistingStrategy: true
}
ðŸš€ Launched chart in browser: http://localhost:8000/api/chart
ðŸ“Š With configuration: {
  strategyType: 'candlestick',
  timeframe: '100T',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'MNQscalper',
  indicators: [],
  strategyId: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  isExistingStrategy: true
}
ðŸ“Š Saving chart strategy: {
  name: 'Test Strategy with SMA',
  strategy_type: 'candlestick',
  contract_symbol: 'MNQ',
  timeframe: '15',
  chart_config: { indicators: [ [Object] ] }
}
ðŸ“Š Saving indicators separately: [ { type: 'SMA', period: 20 } ]
ðŸ“Š Loading saved strategy: 472b02cb-017f-4a56-b555-6d8182bf6b6b
ðŸ“Š Loading strategy with indicators: [ { type: 'SMA', period: 20 } ]
ðŸ“Š Loaded saved strategy configuration: {
  strategyType: 'candlestick',
  timeframe: '15',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'Test Strategy with SMA',
  indicators: [ { type: 'SMA', period: 20 } ],
  strategyId: '472b02cb-017f-4a56-b555-6d8182bf6b6b',
  isExistingStrategy: true
}
ðŸš€ Launched chart in browser: http://localhost:8000/api/chart
ðŸ“Š With configuration: {
  strategyType: 'candlestick',
  timeframe: '15',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'Test Strategy with SMA',
  indicators: [ { type: 'SMA', period: 20 } ],
  strategyId: '472b02cb-017f-4a56-b555-6d8182bf6b6b',
  isExistingStrategy: true
}
ðŸ“Š Update strategy request: {
  id: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  chart_config: { indicators: [ [Object], [Object] ] },
  chart_type: 'candlestick',
  brick_size: 0.25,
  hasWebhookPayload: false
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
ðŸ“Š Update strategy request: {
  id: '472b02cb-017f-4a56-b555-6d8182bf6b6b',
  chart_config: null,
  chart_type: 'candlestick',
  brick_size: null,
  hasWebhookPayload: true
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
ðŸ“Š Loading saved strategy: 472b02cb-017f-4a56-b555-6d8182bf6b6b
ðŸ“Š Loaded saved strategy configuration: {
  strategyType: 'candlestick',
  timeframe: '15',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'Test Strategy with SMA',
  indicators: [],
  strategyId: '472b02cb-017f-4a56-b555-6d8182bf6b6b',
  isExistingStrategy: true
}
ðŸš€ Launched chart in browser: http://localhost:8000/api/chart
ðŸ“Š With configuration: {
  strategyType: 'candlestick',
  timeframe: '15',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'Test Strategy with SMA',
  indicators: [],
  strategyId: '472b02cb-017f-4a56-b555-6d8182bf6b6b',
  isExistingStrategy: true
}
ðŸ“Š Update strategy request: {
  id: 'd40ec77f-c3e7-4175-8be5-5667e07aab6f',
  chart_config: { indicators: [ [Object] ] },
  chart_type: undefined,
  brick_size: undefined,
  hasWebhookPayload: false
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
