
> trading-backend@1.0.0 start
> node simple-backend.js

âœ… Found existing contracts file with 57 contracts
ðŸš€ Backend running on http://localhost:8025
ðŸ“„ Contracts cached in: /Users/tejasvihegde/Documents/PropAutomation/SuperCharts/SuperCharts/trading-backend/tradableContracts.json
âœ… Connected to PostgreSQL database
âœ… Auth token saved to /Users/tejasvihegde/Documents/PropAutomation/SuperCharts/SuperCharts/auth-token.json for user: tejashegde@gmail.com
ðŸ“Š Update strategy request: {
  id: 'bc6ad90c-d08b-41a4-ac3e-1cdb3b65a6e6',
  chart_config: null,
  chart_type: 'renko',
  brick_size: 0.25,
  hasWebhookPayload: true
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
ðŸ“Š UPDATE - Chart config received: null
ðŸ“Š UPDATE - Extracted indicators: null
ðŸ“Š UPDATE - Preserving existing indicators: [ { type: 'DonchianMidBandStrategy', period: 200 } ]
ðŸ“Š Loading saved strategy: bc6ad90c-d08b-41a4-ac3e-1cdb3b65a6e6
ðŸ“Š Loading strategy with indicators: [ { type: 'DonchianMidBandStrategy', period: 200 } ]
ðŸ“Š Loaded saved strategy configuration: {
  strategyType: 'renko',
  timeframe: '1000T',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'MNQ-TOPSTEPX-PRACTICE',
  indicators: [ { type: 'DonchianMidBandStrategy', period: 200 } ],
  strategyId: 'bc6ad90c-d08b-41a4-ac3e-1cdb3b65a6e6',
  webhookUrl: 'https://administration-storage-battery-synopsis.trycloudflare.com/orders/place',
  isExistingStrategy: true
}
ðŸ“Š Brick size type: string Value: 0.25
ðŸš€ Chart URL prepared: http://localhost:8025/api/chart
ðŸ“Š With configuration: {
  strategyType: 'renko',
  timeframe: '1000T',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'MNQ-TOPSTEPX-PRACTICE',
  indicators: [ { type: 'DonchianMidBandStrategy', period: 200 } ],
  strategyId: 'bc6ad90c-d08b-41a4-ac3e-1cdb3b65a6e6',
  webhookUrl: 'https://administration-storage-battery-synopsis.trycloudflare.com/orders/place',
  isExistingStrategy: true
}
ðŸ“Š Update strategy request: {
  id: '0725ef75-a0a4-4fa3-b480-931518ddeebc',
  chart_config: null,
  chart_type: 'renko',
  brick_size: 0.25,
  hasWebhookPayload: true
}
ðŸ“Š Using minimal webhook payload (no chart configuration)
ðŸ“Š UPDATE - Chart config received: null
ðŸ“Š UPDATE - Extracted indicators: null
ðŸ“Š UPDATE - Preserving existing indicators: [ { type: 'DonchianMidBandStrategy', period: 200 } ]
ðŸ“Š Loading saved strategy: 0725ef75-a0a4-4fa3-b480-931518ddeebc
ðŸ“Š Loading strategy with indicators: [ { type: 'DonchianMidBandStrategy', period: 200 } ]
ðŸ“Š Loaded saved strategy configuration: {
  strategyType: 'renko',
  timeframe: '1000T',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'MNQ-TOPSTEPX-COMBINE',
  indicators: [ { type: 'DonchianMidBandStrategy', period: 200 } ],
  strategyId: '0725ef75-a0a4-4fa3-b480-931518ddeebc',
  webhookUrl: 'https://administration-storage-battery-synopsis.trycloudflare.com/orders/place',
  isExistingStrategy: true
}
ðŸ“Š Brick size type: string Value: 0.25
ðŸš€ Chart URL prepared: http://localhost:8025/api/chart
ðŸ“Š With configuration: {
  strategyType: 'renko',
  timeframe: '1000T',
  brickSize: '0.25',
  contractSymbol: 'MNQ',
  strategyName: 'MNQ-TOPSTEPX-COMBINE',
  indicators: [ { type: 'DonchianMidBandStrategy', period: 200 } ],
  strategyId: '0725ef75-a0a4-4fa3-b480-931518ddeebc',
  webhookUrl: 'https://administration-storage-battery-synopsis.trycloudflare.com/orders/place',
  isExistingStrategy: true
}
